---
# tasks file for Statistics application
- name: "Run 'apt-get update' if the last one is more than 3600 seconds ago"
  apt:
   update_cache: yes
   cache_valid_time: 3600

- name: "Install packages needed by /statistics application"
  apt:
   name: ['python3-mysqldb','php','php-xml','php-mysql']
   state: latest
   install_recommends: no

- name: "Check if 'statistics' DB is already created on {{ idp_stats['db_host'] }} and store the result into 'statistics_db' ansible variable"
  command: mysql --host={{ idp_stats['db_host'] }} --user=statistics --password={{ idp_stats['db_pw'] }} -s -N -e "SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME='statistics'"
  register: statistics_db
  changed_when: false
  when:
   - idp_stats is defined
   - idp_stats['db_host'] is defined and idp_stats['db_pw'] is defined
   - idp_stats['db_host'] != 'localhost'

- name: "Check if 'statistics' DB is already created on localhost and store the result into 'statistics_db' ansible variable"
  command: mysql -s -N -e "SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME='statistics'"
  register: statistics_db
  changed_when: false
  when:
   - idp_stats is defined
   - idp_stats['db_host'] is defined and idp_stats['db_pw'] is defined
   - idp_stats['db_host'] == 'localhost'

- name: "Create 'loganalysis' directory"
  file:
   dest: "/opt/loganalysis"
   owner: "root"
   group: "root"
   mode: "0644"
   state: directory

- name: "Create 'statistics' directory"
  file:
   dest: "/var/www/html/statistics"
   owner: "root"
   group: "root"
   mode: "0755"
   state: directory
  notify:
   - "Restart Apache"

- name: "Load /statistics Configuration files - Part 1"
  template:
   src: "{{ item.src }}"
   dest: "{{ item.dest }}"
   owner: "root"
   group: "root"
   mode: "{{ item.mode }}"
  with_items:
   - { src: "statistics/statistics-idp-db.sql.j2", dest: "/root/statistics-idp-db.sql", mode: "0600" }
   - { src: "statistics/dbanalysis.py.j2", dest: "/opt/loganalysis/dbanalysis.py", mode: "0600" }
   - { src: "statistics/config.php.j2", dest: "/opt/loganalysis/config.php", mode: "0644" }
   - { src: "statistics/insertSP.php.j2", dest: "/opt/loganalysis/insertSP.php", mode: "0644" }
   - { src: "statistics/IDProvider.conf.php.j2", dest: "/opt/loganalysis/IDProvider.conf.php", mode: "0644" }
   - { src: "statistics/db.php.j2", dest: "/var/www/html/statistics/db.php", mode: "0644" }
  notify:
   - "Restart Apache"

- name: "Load /statistics Configuration files - Parte 2"
  copy:
   src: "{{ item.src }}"
   dest: "{{ item.dest }}"
   owner: "{{ item.owner }}"
   group: "{{ item.group }}"
   mode: "{{ item.mode }}"
  with_items:
   - { src: "files/statistics/conf/", dest: "/opt/loganalysis/", owner: "root", group: "root", mode: "0644" }
   - { src: "files/statistics/cron/cron-idp-stats", dest: "/etc/cron.daily/cron-idp-stats", owner: "root", group: "root", mode: "0755" }
  notify:
   - "Restart Apache"

- name: "Create 'statistics' database"
  mysql_db:
   encoding: "utf8"
   state: import
   name: all
   target: "/root/statistics-idp-db.sql"
  when: statistics_db.stdout != 'statistics'

- name: "Link the federation metadata file used by /statistics"
  file:
   src: "/opt/shibboleth-idp/metadata/{{ idp_stats['fed_md'] }}"
   dest: "/opt/loganalysis/{{ idp_stats['fed_md'] }}"
   state: "link"

- name: "Load Statistic Web Application files in the right position"
  copy:
   src: "files/statistics/apache/www/"
   dest: "/var/www/html/statistics/"
   owner: "root"
   group: "root"
   mode: "0644"
  notify:
   - "Restart Apache"

- name: "Check if Apache STATISTICS conf is already enabled"
  stat:
   path: "/etc/apache2/conf-enabled/statistics.conf"
  register: stats_apache
  changed_when: false

- name: "Load Apache STATISTICS conf"
  copy:
   src: "files/apache/conf-available/statistics.conf"
   dest: "/etc/apache2/conf-available/statistics.conf"
   owner: "root"
   group: "root"
   mode: "0644"
  when: stats_apache.stat.islnk is not defined
  notify:
   - "Restart Apache"

- name: "Add STATISTICS support to Apache HTTPS VirtualHost"
  blockinfile:
    path: "/etc/apache2/sites-available/{{ fqdn }}-ssl.conf"
    marker: "# {mark} ANSIBLE MANAGED BLOCK - STATISTICS"
    insertbefore: "</VirtualHost>"
    block: |
      Include conf-available/statistics.conf
  when: stats_apache.stat.islnk is not defined
  notify:
   - "Restart Apache"
