---
# tasks file for IdP Style and Languages
- name: "Check if Apache IDP conf is already enabled"
  stat:
   path: "/etc/apache2/conf-enabled/idp.conf"
  register: idp_apache
  changed_when: false

- name: "Add Apache IDP conf"
  template:
   src: "idp.conf.j2"
   dest: "/etc/apache2/conf-available/idp.conf"
   owner: "root"
   group: "root"
   mode: "0600"
  when: idp_apache.stat.islnk is not defined
  notify:
   - "Restart Apache"

- name: "Add IDP support to Apache HTTPS VirtualHost"
  blockinfile:
    path: "/etc/apache2/sites-available/{{ fqdn }}-ssl.conf"
    marker: "# {mark} ANSIBLE MANAGED BLOCK - IDP"
    insertbefore: "</VirtualHost>"
    block: |
      Include conf-available/idp.conf
  when: idp_apache.stat.islnk is not defined
  notify:
   - "Restart Apache"

- name: "Check if SHIB-LOCALHOST conf is already enabled"
  stat:
   path: "/etc/apache2/conf-enabled/shib-localhost.conf"
  register: shib_lo
  changed_when: false

- name: "Add Apache SHIB-LOCALHOST conf"
  copy:
   src: "files/apache/conf-available/shib-localhost.conf"
   dest: "/etc/apache2/conf-available/shib-localhost.conf"
   owner: "root"
   group: "root"
   mode: "0600"
  when: shib_lo.stat.islnk is not defined
  notify:
   - "Restart Apache"

- name: "Add SHIB-LOCALHOST support to Apache HTTPS VirtualHost"
  blockinfile:
    path: "/etc/apache2/sites-available/{{ fqdn }}-ssl.conf"
    marker: "# {mark} ANSIBLE MANAGED BLOCK - SHIB-LOCALHOST"
    insertafter: "</IfModule>"
    block: |
      Include conf-available/shib-localhost.conf
  when: shib_lo.stat.islnk is not defined
  notify:
   - "Restart Apache"

- name: "Put Federation logo and eduGAIN logo in the right position"
  copy:
   src: "{{ files_dir }}/{{ fqdn }}/idp/styles/images"
   dest: "/var/www/html/"
   owner: "root"
   group: "root"
   mode: "0644"
  notify:
   - "Restart Apache"

- name: "Put the IdP language directories in the right position"
  copy:
   src: "{{ files_dir }}/{{ fqdn }}/idp/styles/{{ item.key }}/"
   dest: "/var/www/html/{{ item.key }}/"
   owner: "root"
   group: "root"
  with_dict: "{{ idp_metadata }}"
  notify:
   - "Restart Apache"

- name: "Create 'css' directory needed by Login Page"
  file:
   path: "/var/www/html/css"
   state: directory
  notify:
   - "Restart Apache"

- name: "Put the CSS files for Login Page and User Consent Page in the right position"
  template:
   src: "{{ item.src }}"
   dest: "{{ item.dest }}"
   owner: "root"
   group: "root"
   mode: "0644"
  with_items:
   - { src: "views/login.css.j2", dest: "/var/www/html/css/login.css" }
   - { src: "views/consent.css.j2", dest: "/var/www/html/css/consent.css" }
  notify:
   - "Restart Apache"

- name: "Check if Shibboleth IdP 'idp.intercept.Consent' module is already enabled" 
  stat: 
   path: "/opt/shibboleth-idp/views/intercept/attribute-release.vm"
  register: shib_ar_tou_mod
  when:
   - "shib_idp_version is search('^4.')"

# Enable the ability:
# - require user consent to attribute release
# - present a "terms of use" message
# prior to completing a login to a service

- name: "Enable Attribute Release and TermOfUse Module on Shibboleth IdP v4.1"
  shell: bin/module.sh -t idp.intercept.Consent || bin/module.sh -e idp.intercept.Consent
  args:
   chdir: "/opt/shibboleth-idp"
  when:
   - shib_ar_tou_mod.stat.exists == False
  notify:
   - "Restart Jetty"

- name: "Configure conf/relying-party.xml to enable the Attribute Release Module"
  lineinfile:
   path: "/opt/shibboleth-idp/conf/relying-party.xml"
   regexp: '\s.*\"SAML2.SSO\"\s\/>'
   line: '                <bean parent="SAML2.SSO" p:postAuthenticationFlows="attribute-release" />'
  when:
   - shib_ar_tou_mod.stat.exists == False
  notify:
   - "Restart Jetty"

- name: "Put the Shibboleth IdP Views files in the right position for Shibboleth IdP v4.x"
  template:
   src: "{{ item.src }}"
   dest: "{{ item.dest }}"
   owner: "root"
   group: "root"
   mode: "0644"
  with_items:
   - { src: "views/login-v4.vm.j2", dest: "/opt/shibboleth-idp/views/login.vm" }
   - { src: "views/logout-v4.vm.j2", dest: "/opt/shibboleth-idp/views/logout.vm" }
   - { src: "views/logout-complete-v4.vm.j2", dest: "/opt/shibboleth-idp/views/logout-complete.vm" }
   - { src: "views/logout-propagate-v4.vm.j2", dest: "/opt/shibboleth-idp/views/logout-propagate.vm" }
   - { src: "views/intercept/attribute-release-v4.vm.j2", dest: "/opt/shibboleth-idp/views/intercept/attribute-release.vm" }
  when:
   - "shib_idp_version is search('^4.')"
  notify:
   - "Restart Apache"

- name: "Put default custom.properties and cookie_policy.properties in the right position"
  template:
   src: "{{ item.src }}"
   dest: "{{ item.dest }}"
   owner: "root"
   group: "root"
   mode: "0644"
  with_items:
   - { src: "messages/cookie_policy.properties.j2", dest: "/opt/shibboleth-idp/messages/cookie_policy.properties" }
   - { src: "messages/custom.properties.j2", dest: "/opt/shibboleth-idp/messages/custom.properties" }
  notify:
   - "Restart Apache"

- name: "Put severals messages_LANGUAGE.properties in the right position for Shibboleth IdP v4.x"
  copy:
   src: "files/messages/messages_{{ item.key }}-v4.properties"
   dest: "/opt/shibboleth-idp/messages/messages_{{ item.key }}.properties"
   owner: "root"
   group: "root"
   mode: "0644"
  with_dict: "{{ idp_metadata }}"
  when: 
   - "item.key != 'en'"
   - "shib_idp_version is search('^4.')"
  notify:
   - "Restart Apache"

- name: "Put several custom_LANGUAGE.properties in the right position"
  template:
   src: "messages/custom_{{ item.key }}.properties.j2"
   dest: "/opt/shibboleth-idp/messages/custom_{{ item.key }}.properties"
   owner: "root"
   group: "root"
   mode: "0644"
  with_dict: "{{ idp_metadata }}"
  when: "item.key != 'en'"
  notify:
   - "Restart Apache"

- name: "Put several cookie_policy_LANGUAGE.properties in the right position"
  template:
   src: "messages/cookie_policy_{{ item.key }}.properties.j2"
   dest: "/opt/shibboleth-idp/messages/cookie_policy_{{ item.key }}.properties"
   owner: "root"
   group: "root"
   mode: "0644"
  with_dict: "{{ idp_metadata }}"
  when: "item.key != 'en'"
  notify:
   - "Restart Apache"

- name: "Check if a custom 'info.html' is provided under {{ files_dir }}/{{ fqdn }}/idp/styles/{{ lang }}/"
  stat:
   path: "{{ files_dir }}/{{ fqdn }}/idp/styles/{{ item.key }}/info.html"
  delegate_to: 127.0.0.1
  with_dict: "{{ idp_metadata }}"
  register: info_html
  changed_when: false

- name: "Put the Custom Info Page in the interested languages in the right position"
  copy:
   src: "{{ files_dir }}/{{ fqdn }}/idp/styles/{{ item.item.key }}/info.html"
   dest: "/var/www/html/{{ item.item.key }}/info.html"
   owner: "root"
   group: "root"
   mode: "0644"
  with_items: "{{ info_html.results }}"
  when: item.stat.exists
  notify:
   - "Restart Apache"

- name: "Put the Information Page in the interested languages in the right position"
  template:
   src: "styles/{{ item.key }}/info.html.j2"
   dest: "/var/www/html/{{ item.key }}/info.html"
   owner: "root"
   group: "root"
   mode: "0644"
  with_dict: "{{ idp_metadata }}"
  when:
   - idp_login is defined
   - idp_login['create_info_and_pp_pages'] is defined
   - idp_login['create_info_and_pp_pages'] in ["True","true","Yes","yes"]

- name: "Check if a custom 'privacy.html' is provided under {{ files_dir}}/{{ fqdn }}/idp/styles/{{ lang }}/"
  stat:
   path: "{{ files_dir }}/{{ fqdn }}/idp/styles/{{ item.key }}/privacy.html"
  delegate_to: 127.0.0.1
  with_dict: "{{ idp_metadata }}"
  register: privacy_html
  changed_when: false

- name: "Put the Custom Privacy Policy Page in the interested languages in the right position"
  copy:
   src: "{{ files_dir }}/{{ fqdn }}/idp/styles/{{ item.item.key }}/privacy.html"
   dest: "/var/www/html/{{ item.item.key }}/privacy.html"
   owner: "root"
   group: "root"
   mode: "0644"
  with_items: "{{ privacy_html.results }}"
  when: item.stat.exists
  notify:
   - "Restart Apache"

- name: "Put the Privacy Policy Page in the interested languages in the right position"
  template:
   src: "styles/{{ item.key }}/privacy.html.j2"
   dest: "/var/www/html/{{ item.key }}/privacy.html"
   owner: "root"
   group: "root"
   mode: "0644"
  with_dict: "{{ idp_metadata }}"
  when:
   - idp_login is defined
   - idp_login['create_info_and_pp_pages'] is defined
   - idp_login['create_info_and_pp_pages'] in ["True","true","Yes","yes"]

- name: "Remove all the Privacy Policy Pages created if they are not needed"
  file:
   dest: "/var/www/html/{{ item.key }}/privacy.html"
   state: "absent"
  with_dict: "{{ idp_metadata }}"
  when:
   - idp_login is defined
   - idp_login['create_info_and_pp_pages'] is not defined or idp_login['create_info_and_pp_pages'] in ["No","no","False","false"]
  notify:
   - "Restart Apache"

- name: "Remove all the Information Pages created if they are not needed"
  file:
   dest: "/var/www/html/{{ item.key }}/info.html"
   state: "absent"
  with_dict: "{{ idp_metadata }}"
  when:
   - idp_login is defined
   - idp_login['create_info_and_pp_pages'] is undefined or idp_login['create_info_and_pp_pages'] in ["No","no","False","false"]
  notify:
   - "Restart Apache"

- name: "Add Default Info and Privacy pages"
  copy:
   src: "{{ item.src }}"
   dest: "{{ item.dest }}"
   owner: "root"
   group: "root"
   mode: "0644"
  with_items:
   - { src: "files/html/no_privacy.html", dest: "/var/www/html/en/privacy.html" }
   - { src: "files/html/no_info.html", dest: "/var/www/html/en/info.html" }
  when:
   - idp_login is defined
   - idp_login['create_info_and_pp_pages'] is undefined or idp_login['create_info_and_pp_pages'] in ["No","no","False","false"]
  notify:
   - "Restart Apache"
