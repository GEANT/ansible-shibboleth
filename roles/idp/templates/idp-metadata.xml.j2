<?xml version="1.0" encoding="UTF-8"?>
<EntityDescriptor  xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:shibmd="urn:mace:shibboleth:metadata:1.0" xmlns:xml="http://www.w3.org/XML/1998/namespace" xmlns:mdui="urn:oasis:names:tc:SAML:metadata:ui" entityID="{{ idp_entityID }}">

    <IDPSSODescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">

        <Extensions>
            <shibmd:Scope regexp="false">{{ idp_config['scope'] }}</shibmd:Scope>
            <mdui:UIInfo>
{% for field in ["mdui_displayName", "mdui_description", "mdui_infoUrl", "mdui_privacyUrl", "mdui_logo", "mdui_favicon"] %}
{% for lang, value in idp_metadata.items() %}
{% if field == "mdui_displayName" %}
               <mdui:DisplayName xml:lang="{{ lang }}">{{ idp_metadata[lang]['mdui_displayName'] }}</mdui:DisplayName>
{% elif field == "mdui_description" %}
               <mdui:Description xml:lang="{{ lang }}">{{ idp_metadata[lang]['mdui_description'] }}</mdui:Description>
{% elif field == "mdui_infoUrl" %}
               <mdui:InformationURL xml:lang="{{ lang }}">{{ idp_metadata[lang]['mdui_infoUrl'] }}</mdui:InformationURL>
{% elif field == "mdui_privacyUrl" %}
               <mdui:PrivacyStatementURL xml:lang="{{ lang }}">{{ idp_metadata[lang]['mdui_privacyUrl'] }}</mdui:PrivacyStatementURL>
{% elif field == "mdui_favicon" %}
               <mdui:Logo xml:lang="{{ lang }}" width="16" height="16">{{ idp_metadata[lang]['mdui_favicon'] }}</mdui:Logo>
{% elif field == "mdui_logo" %}
               <mdui:Logo xml:lang="{{ lang }}" width="80" height="60">{{ idp_metadata[lang]['mdui_logo'] }}</mdui:Logo>
{% endif %}
{% endfor %}
{% endfor %}
            </mdui:UIInfo>
        </Extensions>
        <KeyDescriptor use="signing">
            <ds:KeyInfo>
                    <ds:X509Data>
                        <ds:X509Certificate>
{{ idp_backchannel_cert.stdout | regex_replace('-+.*', '') }}
                        </ds:X509Certificate>
                    </ds:X509Data>
            </ds:KeyInfo>
        </KeyDescriptor>

        <KeyDescriptor use="signing">
            <ds:KeyInfo>
                    <ds:X509Data>
                        <ds:X509Certificate>
{{ idp_signing_cert.stdout | regex_replace('-+.*', '') }}
                        </ds:X509Certificate>
                    </ds:X509Data>
            </ds:KeyInfo>
        </KeyDescriptor>

        <KeyDescriptor use="encryption">
            <ds:KeyInfo>
                    <ds:X509Data>
                        <ds:X509Certificate>
{{ idp_encryption_cert.stdout | regex_replace('-+.*', '') }}
                        </ds:X509Certificate>
                    </ds:X509Data>
            </ds:KeyInfo>
        </KeyDescriptor>

        <ArtifactResolutionService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://{{ fqdn }}/idp/profile/SAML2/SOAP/ArtifactResolution" index="1"/>

        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://{{ fqdn }}/idp/profile/SAML2/Redirect/SLO"/>
        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://{{ fqdn }}/idp/profile/SAML2/POST/SLO"/>
        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign" Location="https://{{ fqdn }}/idp/profile/SAML2/POST-SimpleSign/SLO"/>
        <!--
        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://{{ fqdn }}/idp/profile/SAML2/SOAP/SLO"/>
        -->

        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>
        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>

        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://{{ fqdn }}/idp/profile/SAML2/POST/SSO"/>
        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign" Location="https://{{ fqdn }}/idp/profile/SAML2/POST-SimpleSign/SSO"/>
        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://{{ fqdn }}/idp/profile/SAML2/Redirect/SSO"/>

    </IDPSSODescriptor>

    <AttributeAuthorityDescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">
        <Extensions>
            <shibmd:Scope regexp="false">{{ idp_config['scope'] }}</shibmd:Scope>
        </Extensions>

        <KeyDescriptor use="signing">
            <ds:KeyInfo>
                    <ds:X509Data>
                        <ds:X509Certificate>
{{ idp_backchannel_cert.stdout | regex_replace('-+.*', '') }}
                        </ds:X509Certificate>
                    </ds:X509Data>
            </ds:KeyInfo>
        </KeyDescriptor>

        <KeyDescriptor use="signing">
            <ds:KeyInfo>
                    <ds:X509Data>
                        <ds:X509Certificate>
{{ idp_signing_cert.stdout | regex_replace('-+.*', '') }}
                        </ds:X509Certificate>
                    </ds:X509Data>
            </ds:KeyInfo>
        </KeyDescriptor>

        <KeyDescriptor use="encryption">
            <ds:KeyInfo>
                    <ds:X509Data>
                        <ds:X509Certificate>
{{ idp_encryption_cert.stdout | regex_replace('-+.*', '') }}
                        </ds:X509Certificate>
                    </ds:X509Data>
            </ds:KeyInfo>
        </KeyDescriptor>

        <AttributeService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://{{ fqdn }}/idp/profile/SAML2/SOAP/AttributeQuery"/>
        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>
        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>
    </AttributeAuthorityDescriptor>
    <Organization>
{% for field in ["org_name", "org_displayName", "org_url"] %}
{% for lang, value in idp_metadata.items() %}
{% if field == "org_name" %}
       <OrganizationName xml:lang="{{ lang }}">{{ idp_metadata[lang]['org_name'] }}</OrganizationName>
{% elif field == "org_displayName" %}
       <OrganizationDisplayName xml:lang="{{ lang }}">{{ idp_metadata[lang]['org_displayName'] }}</OrganizationDisplayName>
{% elif field == "org_url" %}
       <OrganizationURL xml:lang="{{ lang }}">{{ idp_metadata[lang]['org_url'] }}</OrganizationURL>
{% endif%}
{% endfor %}
{% endfor %}
   </Organization>
{% for type, value in idp_contacts.items() %}
   <ContactPerson contactType="{{ type }}">
       <GivenName>{{ idp_contacts[type]['givenName'] }}</GivenName>
       <SurName>{{ idp_contacts[type]['surName'] }}</SurName>
       <EmailAddress>mailto:{{ idp_contacts[type]['mail'] }}</EmailAddress>
   </ContactPerson>
{% endfor %}

</EntityDescriptor>
