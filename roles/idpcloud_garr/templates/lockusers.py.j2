#!/usr/bin/env python3
# coding=utf-8

import ldap
import ldap.modlist as modlist
from datetime import datetime

# PARAMETERS

ldapuser            = "{{ pla['ldap']['root_dn'] }}"
ldappasswd          = "{{ pla['ldap']['root_pw'] }}"
ldapsrv             = "ldap://{{ fqdn }}:389"
search_base         = "ou=people,dc=garr,dc=it"
search_scope        = ldap.SCOPE_SUBTREE
search_filter       = "uid=*"
retrieve_attributes = [ 'uid', 'cn', 'pwdAccountLockedTime', 'schacExpiryDate' ]

try:
   # Connect to LDAP server via plain, ssl or tls.
   l = ldap.initialize(ldapsrv,bytes_mode=False)

   # Set LDAP protocol version used
   l.protocol_version=ldap.VERSION3

   # Connect
   l.simple_bind_s(ldapuser,ldappasswd)

   # Return a list of tuple (dn, attrs):
   # [
   #  (
   #    'uid=test.user,ou=people,dc=example,dc=org',
   #    {'cn': [b'Test User'], 'schacExpiryDate': [b'20210820000000Z'],'uid': [b'test.user']}
   #  )
   # ]
   results = l.search(search_base, ldap.SCOPE_SUBTREE, search_filter, retrieve_attributes)

   while 1:
      result_type, result_data = l.result(results, 0)
      if (result_data == []): break

      if result_type == ldap.RES_SEARCH_ENTRY:
         cur_dn = result_data[0][0]
         cur_attrs = result_data[0][1]

      if 'schacExpiryDate' in cur_attrs and len(cur_attrs['schacExpiryDate']) > 0:
         str_schacExpiryDate = str(cur_attrs['schacExpiryDate'][0], 'utf-8')
         expiry_date = datetime.strptime(str_schacExpiryDate, '%Y%m%d%H%M%SZ')
         if datetime.now() >= expiry_date:
            if not 'pwdAccountLockedTime' in cur_attrs:
               old = { }
               new = { 'pwdAccountLockedTime': [b'000001010000Z'] }
               ldif = modlist.modifyModlist(old, new)
               l.modify_s(cur_dn, ldif)
               print (f"Locked user { cur_dn }")

   l.unbind_s()

except ldap.LDAPError as e:
        print(e)
