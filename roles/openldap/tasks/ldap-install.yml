---
# tasks for openLDAP Installation
- name: "Run 'apt-get update' if the last one is more than 3600 seconds ago"
  apt:
   update_cache: yes
   cache_valid_time: 3600

- name: "Install 'debconf-utils' and 'python-ldap' packages"
  apt:
   name: ['debconf-utils', 'python-ldap']
   state: latest
   install_recommends: no

- name: "Check if debconf-get-selections has parameters for unattended OpenLDAP installation and store the result on 'debconf' ansible variable"
  shell: (debconf-get-selections | grep -q -s slapd); echo $?
  register: debconf
  ignore_errors: yes
  changed_when: false

- name: "Set OpenLDAP unattended installation parameters"
  debconf:
    name: "slapd"
    question: "{{ item.key }}"
    vtype: "{{ item.type }}"
    value: "{{ item.value }}"
  with_items:
    - key: slapd/password1
      type: password
      value: "{{ ldap['root_pw']|default('') }}"
    - key: slapd/password2
      type: password
      value: "{{ ldap['root_pw']|default('') }}"
    - key: slapd/move_old_database
      type: boolean
      value: true
    - key: slapd/domain
      type: string
      value: "{{ ldap['domain']|default('') }}"
    - key: shared/organization
      type: string
      value: "{{ ldap['org']|default('') }}"
    - key: slapd/no_configuration
      type: boolean
      value: false
    - key: slapd/purge_database
      type: boolean
      value: false
    - key: slapd/allow_ldap_v2
      type: boolean
      value: false
    - key: slapd/backend
      type: select
      value: MDB
  when: debconf.stdout == "1"
  
- name: "Install OpenLDAP and its utilities"
  apt:
   name: ['slapd', 'ldap-utils']
   state: latest
   install_recommends: no

- name: "Generate ldap admin password hash"
  command: "/usr/sbin/slappasswd -s {{ ldap['root_pw'] }}"
  register: slapd_admin_password_hash
  changed_when: false

- name: "Change cn=admin password"
  ldap_attr:
    dn: olcDatabase={1}mdb,cn=config
    name: "{{ item.key }}"
    values: "{{ item.value }}"
    state: exact
  with_dict:
    olcRootDN: "{{ ldap['root_dn'] }}"
    olcRootPW: "{{ slapd_admin_password_hash.stdout }}"
  changed_when: false

